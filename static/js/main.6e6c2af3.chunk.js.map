{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","handleUpClick","newtext","toUpperCase","showalert","handleLoClick","toLowerCase","handleclearClick","handleExtraspaces","split","join","length","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","aboutText","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6e6c2af3.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'; \r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    // <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href =\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href =\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href =\"/about\">{props.aboutText}</a>\r\n          </li> */}\r\n         \r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n\r\n<div className={`form-check form-switch text-${props.mode===`light`?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: propTypes.string,\r\n    aboutText: propTypes.string,\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase was clicked\" + text)\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showalert(\"Converted to Uppercase\", \"Success\")\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n      console.log(\"Lowercase was clicked\" + text)\r\n      let newtext = text.toLowerCase();\r\n      setText(newtext)\r\n      props.showalert(\"Converted to Lowercase\", \"Success\")\r\n  }\r\n\r\n  const handleclearClick = ()=>{\r\n    let newtext = \" \" ;\r\n    setText(newtext)\r\n    props.showalert(\"Text was cleared\", \"Success\")\r\n}\r\n\r\n\r\nconst handleExtraspaces = ()=>{\r\n  let newtext = text.split(/[ ]+/);\r\n  setText(newtext.join(\" \"))\r\n  props.showalert(\"Extra spaces were removed\", \"Success\")\r\n}\r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On Change\")\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\")\r\n  return (\r\n    <>\r\n    <div className='container'   style={{color: props.mode===`dark`?'white':'black'}}>\r\n        <h2>{props.heading}</h2>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange= {handleOnChange} style={{backgroundColor: props.mode===`dark`?'grey':'white', color: props.mode===`dark`?'white':'black'}} id=\"MyBox\" rows=\"10\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick= {handleUpClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick= {handleLoClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick= {handleclearClick}>Clear Text </button>\r\n<button className=\"btn btn-primary mx-2\" onClick= {handleExtraspaces}>Remove extra spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\"   style={{color: props.mode===`dark`?'white':'black'}}>  \r\n      <h3>Your text summary</h3>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text: 'Enter something in text box above to preview it'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n  <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showalert(\"Dark mode has been enabled\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"Light mode has been enabled\", \"Success\");\n    }\n  };\n\n  const [alert, setAlert] = useState(null);\n  const showalert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />} /> */}\n            {/* <Route exact path=\"/\" element={<TextForm\n                heading=\"Enter the text to analyze below\"\n                showalert={showalert}\n                mode={mode}\n              />}/> */}\n              <TextForm\n                heading=\"Enter the text to analyze below\"\n                showalert={showalert}\n                mode={mode}\n              />\n            {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n \n);\n\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}